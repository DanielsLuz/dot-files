# ===============================================
# Flux helpers
# ===============================================
snippet dispatch "dispatcher dispatch function"
Dispatcher.dispatch({
	type: ${1:ActionTypes}.${2:ACTION_CONSTANT},
	${3:data}: $4
});
endsnippet

snippet store "basic es6 flux store"
import { EventEmitter } from "events";
const CHANGE_EVENT = "change";

class Store extends EventEmitter {
	constructor() {
		super();
		this.dispatchToken = null;
	}

	emitChange() {
		this.emit(CHANGE_EVENT);
	}

	addChangeListener(callback) {
		this.on(CHANGE_EVENT, callback);
	}

	removeChangeListener(callback) {
		this.removeListener(CHANGE_EVENT, callback);
	}
}

export default Store;
endsnippet

snippet acl "addChangeListener" w
addChangeListener(this.${1:_onChange});
endsnippet

snippet rcl "removeChangeListener" w
removeChangeListener(this.${1:_onChange});
endsnippet
